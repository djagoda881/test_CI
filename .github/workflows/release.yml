# GitHub action creating a release based on a new tag.
# The action only runs when a new tag is pushed to the main branch.

name: "Release"

on:
  push:
    tags:
      - 'v*' # Match tags that start with 'v' 

jobs:
  branch_check:
    name: "Branch check"
    runs-on: "ubuntu-latest"
    outputs:
      output1: ${{ steps.step1.outputs.branch }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Finds the branch on which the tag was created, 
      # saves it to a variable and returns as the result of the job "branch_check"
      - name: Get current branch
        id: step1
        run: |
          raw=$(git branch -r --contains ${{ github.ref }}) &&
          branch=${raw##*/} &&
          echo "branch=$branch" >> $GITHUB_OUTPUT
         

  release:
    runs-on: ubuntu-latest
    needs: branch_check # Wait for branch_check step to finish
    # only run 'release' job if branch is main

    env:
      PROJECT_PATH: tests/dbt_projects/postgres

    services:
      postgres:
        image: postgres:15.1
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: db
        ports:
          - 5432:5432
    if: ${{ needs.branch_check.outputs.output1 == 'ci_action_unit_tests' }} 

    steps:
      - uses: actions/checkout@v4
      - uses: fregante/setup-git-user@v2
      
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"


      - name: test
        run: git checkout -b release_branch
        
      - name: step1
        run: touch step1.txt

      - name: step2
        run: touch step2.txt
      
      - name: step3
        run: touch step4.txt

      - name: commit
        run: |
          git add -A
          git branch
          git commit -m"test"
          git push --set-upstream origin release_branch
          gh pr create -B ci_action_unit_tests -H release_branch --title 'Merge branch_to_merge into base_branch' --body 'Created by Github action'
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
  
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.TOKEN}}"
          prerelease: false
